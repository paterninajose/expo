{"version":3,"file":"UpdatesProvider.constants.js","sourceRoot":"","sources":["../src/UpdatesProvider.constants.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,WAAW,CAAC;AAErC,qCAAqC;AAErC,iEAAiE;AACjE,MAAM,CAAC,MAAM,gBAAgB,GAAyB;IACpD,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;IAC1C,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;IAC5C,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,cAAc,EAAE,OAAO,CAAC,cAAc;CACvC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAN,IAAY,gCAaX;AAbD,WAAY,gCAAgC;IAC1C;;OAEG;IACH,4DAAwB,CAAA;IACxB;;OAEG;IACH,kEAA8B,CAAA;IAC9B;;OAEG;IACH,4DAAwB,CAAA;AAC1B,CAAC,EAbW,gCAAgC,KAAhC,gCAAgC,QAa3C","sourcesContent":["import * as Updates from './Updates';\nimport type { CurrentlyRunningInfo } from './UpdatesProvider.types';\n/////// Constants and enums  ////////\n\n// The currently running info, constructed from Updates constants\nexport const currentlyRunning: CurrentlyRunningInfo = {\n  updateId: Updates.updateId,\n  channel: Updates.channel,\n  createdAt: Updates.createdAt,\n  isEmbeddedLaunch: Updates.isEmbeddedLaunch,\n  isEmergencyLaunch: Updates.isEmergencyLaunch,\n  manifest: Updates.manifest,\n  runtimeVersion: Updates.runtimeVersion,\n};\n\n/**\n * Enumeration of the different possible event types emitted by [`downloadUpdate`](#downloadupdate) during\n * the download of an available update.\n */\nexport enum UpdatesProviderDownloadEventType {\n  /**\n   * Type of event emitted when update download starts.\n   */\n  DOWNLOAD_START = 'start',\n  /**\n   * Type of event emitted when update download completes successfully.\n   */\n  DOWNLOAD_COMPLETE = 'complete',\n  /**\n   * Type of event emitted when update download completes with an error.\n   */\n  DOWNLOAD_ERROR = 'error',\n}\n"]}